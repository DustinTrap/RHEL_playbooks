---
# Red Hat Insights has recommended one or more actions for you, a system administrator, to review and if you
# deem appropriate, deploy on your systems running Red Hat software. Based on the analysis, we have automatically
# generated an Ansible Playbook for you. Please review and test the recommended actions and the Playbook as
# they may contain configuration changes, updates, reboots and/or other changes to your systems. Red Hat is not
# responsible for any adverse outcomes related to these recommendations or Playbooks.
#
# Test Remediation 1
# https://cloud.redhat.com/insights/remediations/933c690e-269d-4424-89ee-e891a3960345
# Generated by Red Hat Insights on Tue, 06 Aug 2019 15:21:35 GMT

- name: run insights to obtain latest diagnosis info
  hosts: "rhel7-syno-vm01.local"
  become: True
  tasks:
    - name: obtain diagnosis info
      shell: 'insights-client --diagnosis 933c690e-269d-4424-89ee-e891a3960345'
      register: insights_result
      changed_when: false
      check_mode: false
    - name: register insights report as fact for use by other plays
      set_fact: insights_report={{ insights_result.stdout }}

# CPU vulnerable to side-channel attacks (CVE-2017-5753&#x2F;Spectre, CVE-2017-5715&#x2F;Spectre, CVE-2017-5754&#x2F;Meltdown)
# Identifier: (advisor:CVE_2017_5753_4_cpu_kernel|KERNEL_CVE_2017_5753_4_CPU_ERROR_3,kernel_update)
# Version: 4a790e0e27660f70dab0bf6572968378e5801b48
- name: Update system to the latest kernel and reboot
  hosts: "localhost.localdomain"
  become: true
  vars:
    # determine if we need to update the 'kernel' package or 'kernel-rt' package
    kernel_pkg: "{{'kernel-rt' if 'rt' in ansible_kernel else 'kernel'}}"

  tasks:
    - name: Update kernel
      yum:
        name: "{{kernel_pkg}}"
        state: latest
      register: yum

    - when: yum is changed
      name: set reboot fact
      set_fact:
        insights_needs_reboot: True

    - when: not yum is changed
      # The latest kernel is already installed so boot from it.  Sort the installed kernels
      # by buildtime and select the one with the most recent build time
      block:
      - name: get latest installed {{kernel_pkg}} package version
        shell: rpm -q {{kernel_pkg}} --queryformat="%{buildtime}\t%{version}-%{release}.%{arch}\n" | sort -nr | head -1 | cut -f2
        register: latest_kernel
        check_mode: no

      - name: get configured default kernel
        command: /sbin/grubby --default-kernel
        register: default_kernel
        check_mode: no

      - when: default_kernel.stdout.split('-', 1)[1] != latest_kernel.stdout
        name: set the default kernel to the latest installed
        command: /sbin/grubby --set-default /boot/vmlinuz-{{latest_kernel.stdout}}
        register: grub_change
        check_mode: no

      - when: grub_change is changed
        name: set reboot fact
        set_fact:
          insights_needs_reboot: True


# CPU vulnerable to side-channel attacks using Microarchitectural Data Sampling as reported by kernel (CVE-2018-12130, CVE-2018-12126, CVE-2018-12127, CVE-2019-11091)
# Identifier: (advisor:CVE_2018_12130_cpu_kernel|CVE_2018_12130_CPU_KERNEL_VULNERABLE,cmdline)
# Version: a801cdab26e61f3b864b75983f16082643aa0d13
# Playbook for CVE_2018_12130_CPU_KERNEL_VULNERABLE
# Note: This playbook will enable full MDS mitigations, to include disabling SMT.
# Further action may be required for complete mitigation, e.g. firmware updates in the
# system BIOS, or changes to hypervisor parameters.
- name: Enable full kernel MDS mitigation
  hosts: "localhost.localdomain"
  become: true
  vars:
    pydata: "{{insights_report.details['CVE_2018_12130_cpu_kernel|CVE_2018_12130_CPU_KERNEL_VULNERABLE']|default('')}}"
  tasks:
    - when: pydata != ''
      block:
        - command: grubby --update-kernel=ALL --args="mds=full,nosmt"

        # pbtest reboot
        - name: Reboot
          set_fact:
            insights_needs_reboot: True


# Reboots a system if any of the preceeding plays sets the 'insights_needs_reboot' variable to true.
# The variable can be overridden to suppress this behavior.
- name: Reboot system (if applicable)
  hosts: "localhost.localdomain"
  become: True
  gather_facts: False
  tasks:
    - when:
        - insights_needs_reboot is defined
        - insights_needs_reboot
      block:
        - name: Reboot system
          shell: sleep 2 && shutdown -r now "Ansible triggered reboot"
          async: 1
          poll: 0
          ignore_errors: true

        - name: Wait for system to boot up
          local_action:
            module: wait_for
            host: "{{ hostvars[inventory_hostname]['ansible_host'] | default(hostvars[inventory_hostname]['ansible_ssh_host'], true) | default(inventory_hostname, true) }}"
            port: "{{ hostvars[inventory_hostname]['ansible_port'] | default(hostvars[inventory_hostname]['ansible_ssh_port'], true) | default('22', true) }}"
            delay: 15
            search_regex: OpenSSH
            timeout: 300
          become: false

- name: run insights
  hosts: "localhost.localdomain"
  become: True
  gather_facts: False
  tasks:
    - name: run insights
      command: insights-client
      changed_when: false
